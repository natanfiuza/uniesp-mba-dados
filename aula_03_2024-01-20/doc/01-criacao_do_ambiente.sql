USE MASTER
GO

IF EXISTS(
	SELECT 1
	FROM SYS.DATABASES
	WHERE NAME = 'DISCIPLINA02'
)
	DROP DATABASE DISCIPLINA02;


--CRIE UM BANCO DE DADOS COM O NOME "DISCIPLINA02"
CREATE DATABASE DISCIPLINA02;
GO

USE DISCIPLINA02;
GO

--CRIA A TABELA UFS DA SEGUINTE FORMA:
/*
ID INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
UF TEXTO NÃO NULO, CHAVE ÚNICA (ÍNDICE NÃO CLUSTER)
*/
CREATE TABLE UFS(
	IDUF INT NOT NULL IDENTITY(1,1),
	UF CHAR(2) NOT NULL,

	CONSTRAINT PK_UFS PRIMARY KEY CLUSTERED(IDUF),

	CONSTRAINT UNQ_UFS_UF UNIQUE NONCLUSTERED(UF)
);
GO

--ADICIONE UM VALOR PADRÃO PARA A COLUNA UF, CUJO VALOR É "PB"
ALTER TABLE UFS ADD CONSTRAINT DEF_UFS_UF DEFAULT 'PB' FOR UF;
GO


--CRIE A TABELA CIDADES DA SEGUINTE FORMA:
/*
IDCIDADE INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 0 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
CIDADE TEXTO DE ATÉ 100 CARACTERES NÃO NULO
IDUF INTEIRO NÃO NULO, CHAVE EXTRANGEIRA PARA IDUF DA TABELA UFS
*/
CREATE TABLE CIDADES(
	IDCIDADE INT NOT NULL IDENTITY(0,1),
	CIDADE VARCHAR(100) NOT NULL,
	IDUF INT NOT NULL,

	CONSTRAINT PK_CIDADES PRIMARY KEY CLUSTERED(IDCIDADE),

	CONSTRAINT FK_CIDADES_UFS FOREIGN KEY(IDUF) REFERENCES UFS(IDUF) ON UPDATE NO ACTION ON DELETE NO ACTION
);
GO

--CRIE A TABELA BAIRROS DA SEGUINTE FORMA:
/*
IDBAIRRO INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
BAIRRO TEXTO DE ATÉ 100 CARACTERES NÃO NULO
IDCIDADE INTEIRO NÃO NULO, CHAVE EXTRANGEIRA PARA IDCIDADE DA TABELA CIDADES
*/
CREATE TABLE BAIRROS(
	IDBAIRRO INT NOT NULL IDENTITY(1,1),
	BAIRRO VARCHAR(100) NOT NULL,
	IDCIDADE INT NOT NULL,

	CONSTRAINT PK_BAIRROS PRIMARY KEY CLUSTERED (IDBAIRRO),

	CONSTRAINT FK_BAIRROS_CIDADES FOREIGN KEY(IDCIDADE) REFERENCES CIDADES(IDCIDADE) ON UPDATE NO ACTION ON DELETE NO ACTION
);
GO

--CRIE A TABELA LOGRADOUROS DA SEGUINTE FORMA:
/*
IDLOGRADOURO INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE -NÃO- CLUSTER)
LOGRADOURO TEXTO DE ATÉ 100 CARACTERES NÃO NULO
IDBAIRRO INTEIRO NÃO NULO, CHAVE EXTRANGEIRA PARA IDBAIRRO DA TABELA BAIRROS
CEP TEXTO DE 8 CARACTERES NÃO NULO, CHAVE ÚNICA (ÍNDICE CLUSTER)
*/
CREATE TABLE LOGRADOUROS(
	IDLOGRADOURO INT NOT NULL IDENTITY(1,1),
	LOGRADOURO VARCHAR(100) NOT NULL,
	IDBAIRRO INT NOT NULL,
	CEP CHAR(8) NOT NULL,

	CONSTRAINT PK_LOGRADOUROS PRIMARY KEY NONCLUSTERED(IDLOGRADOURO),

	CONSTRAINT UNQ_LOGRADOUROS_CEP UNIQUE CLUSTERED(CEP)
);
GO


ALTER TABLE LOGRADOUROS ADD CONSTRAINT FK_LOGRADOUROS_BAIRROS
FOREIGN KEY(IDBAIRRO) REFERENCES BAIRROS(IDBAIRRO);
GO

--CRIE A TABELA CLIENTES DA SEGUINTE FORMA:
/*
IDCLIENTE INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
NOME TEXTO DE ATÉ 100 CARACTERES NÃO NULO
CPF TEXTO DE 11 CARACTERES NÃO NULO, CHAVE ÚNICA (ÍNDICE NÃO CLUSTER)
SEXO TEXTO DE 1 CARACTER NÃO NULO, ACEITA APENAS OS VALORES "M" OU "F", CHAVE EXTRANGEIRA PARA IDLOGRADOURO DA TABELA LOGRADOUROS
*/
CREATE TABLE CLIENTES(
	IDCLIENTE INT NOT NULL IDENTITY(1,1),
	NOME VARCHAR(100) NOT NULL,
	CPF CHAR(11) NOT NULL,
	SEXO CHAR(1) NOT NULL CONSTRAINT CHK_CLIENTES_SEXO CHECK (SEXO IN('M','F')),
	IDLOGRADOURO INT NOT NULL,

	CONSTRAINT PK_CLIENTES PRIMARY KEY CLUSTERED(IDCLIENTE),

	CONSTRAINT UNQ_CLIENTES_CPF UNIQUE NONCLUSTERED(CPF),

	CONSTRAINT FK_CLIENTES_LOGRADOUROS FOREIGN KEY(IDLOGRADOURO) REFERENCES LOGRADOUROS(IDLOGRADOURO) ON UPDATE NO ACTION ON DELETE NO ACTION
);
GO

--CRIE A TABELA PRODUTOS DA SEGUINTE FORMA:
/*
IDPRODUTO INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
PRODUTO TEXTO DE ATÉ 100 CARACTERES NÃO NULO
VALOR NUMÉRICO COM 2 CASAS DECIMAIS E VALOR MÁXIMO 9.999 NÃO NULO, ACEITA APENAS VALORES ACIMA DE 0
*/
CREATE TABLE PRODUTOS(
	IDPRODUTO INT NOT NULL IDENTITY(1,1),
	PRODUTO VARCHAR(100) NOT NULL,
	VALOR NUMERIC(6,2) NOT NULL,

	CONSTRAINT PK_PRODUTOS PRIMARY KEY CLUSTERED(IDPRODUTO),

	CONSTRAINT CHK_PRODUTOS_VALOR CHECK(VALOR > 0)
);
GO

--CRIE A TABELA VENDAS DA SEGUINTE FORMA
/*
IDVENDA INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER)
DATA DATA/HORA NÃO NULO, VALOR PADRÃO = DATA/HORA ATUAL
IDCLIENTE INTEIRO NÃO NULO, CHAVE EXTRANGEIRA PARA IDCLIENTE DA TABELA CLIENTES
*/
CREATE TABLE VENDAS(
	IDVENDA INT NOT NULL IDENTITY(1,1),
	DATA DATETIME NOT NULL CONSTRAINT DEF_VENDAS_DATA DEFAULT GETDATE(),
	IDCLIENTE INT NOT NULL,

	CONSTRAINT PK_VENDAS PRIMARY KEY CLUSTERED(IDVENDA),

	CONSTRAINT FK_VENDAS_CLIENTES FOREIGN KEY(IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE)
);

--CRIE A TABELA ITENS_VENDAS DA SEGUINTE FORMA:
/*
IDVENDA INTEIRO NÃO NULO, AUTOINCREMENTAL INICIANDO EM 1 E INCREMENTANDO EM 1, CHAVE PRIMÁRIA (ÍNDICE CLUSTER), CHAVE EXTRANGEIRA PARA IDVENDA DA TABELA VENDAS
NUMERO_ITEM MENOR INTEIRO POSSÍVEL, NÃO NULO
IDPRODUTO INTEIRO NÃO NULO, CHAVE EXTRANGEIRA PARA IDPRODUTO DA TABELA PRODUTOS
VALOR NUMÉRICO COM 2 CASAS DECIMAIS E VALOR MÁXIMO 9.999 NÃO NULO
QUANTIDADE MENOR INTEIRO POSSÍVEL, NÃO NULO
*/
CREATE TABLE ITENS_VENDAS(
	IDVENDA INT NOT NULL,
	NUMERO_ITEM TINYINT NOT NULL,
	IDPRODUTO INT NOT NULL,
	VALOR NUMERIC(6,2) NOT NULL,
	QUANTIDADE TINYINT NOT NULL,

	CONSTRAINT PK_ITENS_VENDAS PRIMARY KEY CLUSTERED(IDVENDA,NUMERO_ITEM),

	CONSTRAINT FK_ITENS_VENDAS_VENDAS FOREIGN KEY(IDVENDA) REFERENCES VENDAS(IDVENDA),

	CONSTRAINT FK_ITENS_VENDAS_PRODUTOS FOREIGN KEY(IDPRODUTO) REFERENCES PRODUTOS(IDPRODUTO)
);
GO

--ADICIONE O CAMPO CALCULADO A TABELA ITENS_VENDAS
--TOTAL = VALOR * QUANTIDADE
ALTER TABLE ITENS_VENDAS
ADD TOTAL AS VALOR * QUANTIDADE;
GO


PRINT 'MENSAGEM';
GO


PRINT NEWID();  --uniqueidentifier
GO 10