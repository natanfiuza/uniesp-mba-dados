"""
An√°lise de Turnover em Departamento de Desenvolvimento

Gera um relat√≥rio de Analise Descritiva

"""

# Importa√ß√£o de bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from scipy.stats import chi2_contingency, ttest_ind

# Configura√ß√£o de visualiza√ß√£o
plt.style.use('ggplot')
sns.set_palette("husl")
#%matplotlib inline

# 1. Carregamento e Inspe√ß√£o Inicial dos Dados
try:
    df = pd.read_csv('dados_rh.csv')
    print("‚úÖ Arquivo carregado com sucesso!")
except FileNotFoundError:
    print("‚ùå Arquivo n√£o encontrado!")

def generate_descriptive_report(df):
    """
    Gera um relat√≥rio descritivo dos dados com base na tabela fornecida.
    """
    # C√°lculo das estat√≠sticas descritivas
    desc_stats = df.describe(include='all').T

    # Inicializa o relat√≥rio
    report = "# üìä **Relat√≥rio de An√°lise Descritiva dos Dados** üìä\n\n"

    # 1. Dados Demogr√°ficos
    report += "### 1. Dados Demogr√°ficos\n"
    report += f"- **Idade**:\n"
    report += f"  - M√©dia: {desc_stats.loc['Idade', 'mean']:.1f} anos\n"
    report += f"  - Mediana: {desc_stats.loc['Idade', '50%']:.1f} anos\n"
    report += f"  - Faixa: {desc_stats.loc['Idade', 'min']:.1f} a {desc_stats.loc['Idade', 'max']:.1f} anos\n"
    report += f"- **G√™nero**:\n"
    report += f"  - Mais frequente: {desc_stats.loc['G√™nero', 'top']}\n"
    report += f"- **Estado Civil**:\n"
    report += f"  - Mais frequente: {desc_stats.loc['Estado Civil', 'top']}\n"
    report += f"- **Escolaridade**:\n"
    report += f"  - Mais frequente: {desc_stats.loc['Escolaridade', 'top']}\n\n"

    # 2. Turnover
    report += "### 2. Turnover\n"
    turnover_rate = df['Status'].value_counts(normalize=True).get('Desligado', 0)
    report += f"- **Taxa de Turnover**: {turnover_rate:.1%}\n"
    report += f"- **Motivo de Desligamento mais comum**: {desc_stats.loc['Motivo do Desligamento', 'top']}\n\n"

    # 3. Fatores de Engajamento e Satisfa√ß√£o
    report += "### 3. Fatores de Engajamento e Satisfa√ß√£o\n"
    report += f"- **Engajamento**:\n"
    report += f"  - Mediana: {desc_stats.loc['Engajamento', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Engajamento', 'max']:.1f}\n"
    report += f"- **Satisfa√ß√£o**:\n"
    report += f"  - Mediana: {desc_stats.loc['Satisfa√ß√£o', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Satisfa√ß√£o', 'max']:.1f}\n"
    report += f"- **Percep√ß√£o de Desenvolvimento**:\n"
    report += f"  - Mediana: {desc_stats.loc['Percep√ß√£o de Desenvolvimento', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Percep√ß√£o de Desenvolvimento', 'max']:.1f}\n\n"

    # 4. Promo√ß√µes
    report += "### 4. Promo√ß√µes\n"
    report += f"- **√öltima Promo√ß√£o (anos)**:\n"
    report += f"  - Mediana: {desc_stats.loc['√öltima Promo√ß√£o (anos)', '50%']:.1f} anos\n"
    report += f"  - M√°ximo: {desc_stats.loc['√öltima Promo√ß√£o (anos)', 'max']:.1f} anos\n"
    report += f"  - Observa√ß√£o: {desc_stats.loc['√öltima Promo√ß√£o (anos)', 'count']:.0f} registros v√°lidos\n\n"

    # 5. Horas Extras
    report += "### 5. Horas Extras\n"
    report += f"- **Horas-extras (m√©dia)**:\n"
    report += f"  - Mediana: {desc_stats.loc['Horas-extras (m√©dia)', '50%']:.1f} horas\n"
    report += f"  - M√°ximo: {desc_stats.loc['Horas-extras (m√©dia)', 'max']:.1f} horas\n\n"

    # 6. Apoio da Lideran√ßa
    report += "### 6. Apoio da Lideran√ßa\n"
    report += f"- **Apoio da Lideran√ßa**:\n"
    report += f"  - Mediana: {desc_stats.loc['Apoio da Lideran√ßa', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Apoio da Lideran√ßa', 'max']:.1f}\n\n"

    # 7. Tempo de Empresa
    report += "### 7. Tempo de Empresa\n"
    report += f"- **Tempo de Empresa**:\n"
    report += f"  - Mediana: {desc_stats.loc['Tempo de Empresa', '50%']:.1f} anos\n"
    report += f"  - M√°ximo: {desc_stats.loc['Tempo de Empresa', 'max']:.1f} anos\n\n"

    # 8. Banda Salarial
    report += "### 8. Banda Salarial\n"
    report += f"- **Banda Salarial**:\n"
    report += f"  - Mediana: {desc_stats.loc['Banda Salarial', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Banda Salarial', 'max']:.1f}\n\n"

    # 9. Desempenho
    report += "### 9. Desempenho\n"
    report += f"- **Desempenho**:\n"
    report += f"  - Mediana: {desc_stats.loc['Desempenho', '50%']:.1f}\n"
    report += f"  - M√°ximo: {desc_stats.loc['Desempenho', 'max']:.1f}\n\n"

    # Conclus√£o
    report += "### Conclus√£o\n"
    report += "Este relat√≥rio fornece uma vis√£o geral dos dados, destacando padr√µes e poss√≠veis problemas, como baixo engajamento, falta de promo√ß√µes e insatisfa√ß√£o. Esses insights s√£o fundamentais para identificar as causas do turnover e propor solu√ß√µes eficazes.\n"

    return report


def save_report_to_md(report, filename="descriptive_report.md"):
    """
    Salva o relat√≥rio descritivo em um arquivo Markdown (.md).

    Par√¢metros:
        report (str): O relat√≥rio descritivo gerado.
        filename (str): Nome do arquivo de sa√≠da (padr√£o: 'descriptive_report.md').
    """
    try:
        with open(filename, "w", encoding="utf-8") as file:
            file.write(report)
        print(f"‚úÖ Relat√≥rio salvo com sucesso em '{filename}'!")
    except Exception as e:
        print(f"‚ùå Erro ao salvar o relat√≥rio: {e}")

# Exemplo de uso
# Gera o relat√≥rio descritivo
descriptive_report = generate_descriptive_report(df)

# Salva o relat√≥rio em um arquivo .md
save_report_to_md(descriptive_report, filename="descriptive_report.md")